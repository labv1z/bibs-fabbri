@inproceedings{Chess-IJCAI91,
author =  "David E. Wilkins",
title =  "Chess Was Good for AI Research",  
booktitle = "Proceedings of the 1991 International Joint Conference on Artificial Intelligence",
address =  "Sydney, Australia",
year = "1991",
pages = "551--552",
WINDEXKEY="sri aic paper papers"}

@incollection{PARADISE,
author = "David E. Wilkins",
title = "Using Chess Knowledge to Reduce Search",
booktitle = "Chess Skill in Man and Machine",
editor = "P. Frey",
publisher = "Springer-Verlag",
year = "1983",
chapter = 10,
WINDEXKEY="sri aic paper papers"}

@article{Chess-AIJ82,
author = "David E. Wilkins",
title = "Using Knowledge to Control Tree Searching", 
journal = "Artificial Intelligence",
pages = "1--51",
volume = "18",
year = "1982",
WINDEXKEY="sri aic paper papers"}

@incollection{Chess-Nils,
author = "David E. Wilkins",
title = "Using Patterns and Plans in Chess", 
booktitle = "Readings in Artificial Intelligence",
editor = "Bonnie Weber and Nils Nilsson",
publisher = "Tioga Publishing",
year = "1981",
pages = "390--409",
WINDEXKEY="sri aic paper papers"}

@article{Chess-AIJ80,
author = "David E. Wilkins",
title = "Using Patterns and Plans in Chess", 
journal = "Artificial Intelligence",
pages = "165--203",
volume = "14",
year = "1980",
WINDEXKEY="sri aic paper papers"}

@inproceedings{Chess-causality,
author =  "David E. Wilkins",
title =  "Causality Analysis in Chess",
booktitle = "CSCSI Proceedings",
address =  "Victoria, BC",
year = "1980",
WINDEXKEY="sri aic paper papers"}

@inproceedings{Chess-IJCAI79,
author =  "David E. Wilkins",
title =  "Using Plans in Chess",
booktitle = IJCAI79,
address =  "Tokyo, Japan",
year = "1979",
pages = "960-967",
WINDEXKEY="sri aic paper papers"}




@article{SIPE-AIJ84,
author = "David E. Wilkins",
title = "Domain-Independent Planning: Representation and Plan Generation",
journal = "Artificial Intelligence",
pages = "269-301",
volume = "22",
number = "3",
year = "1984",
WINDEXKEY="sri aic paper papers",
ABSTRACT = "A domain-independent planning program that supports both automatic and
interactive generation of hierarchical, partially ordered plans is described.
An improved formalism makes extensive use of constraints and 
resources to represent domains and actions more powerfully. The formalism
also offers efficient methods for representing properties of objects that do
not change over time, allows specification of the plan rationale (which
includes scoping of conditions and appropriately relating different levels in
the hierarchy), and provides the ability to express deductive rules for
deducing the effects of actions.  The implications of allowing parallel
actions in a plan or problem solution are discussed, and new techniques for
efficiently detecting and remedying harmful parallel interactions are
presented.  The most important of these techniques, reasoning about
resources, is emphasized and explained.  The system supports concurrent
exploration of different branches in the search, making best-first search
easy to implement."}

@article{SIPE-CIJ85,
author = "David E. Wilkins",
title = "Recovering from Execution Erors in SIPE",
journal = CIJ,
volume = "1",
number = "1",
year = "1985",
pages = "33-45",
WINDEXKEY="sri aic paper papers",
ABSTRACT = "In real-world domains (e.g., a mobile robot environment), things do not
always proceed as planned, so it is important to develop better
execution-monitoring techniques and replanning capabilities.  This paper
describes these capabilities in the SIPE planning system.  The motivation
behind SIPE is to place enough limitations on the representation so that
planning can be done efficiently, while retaining sufficient power to still
be useful.  This work assumes that new information given to the execution
monitor is in the form of predicates, thus avoiding the difficult problem of
how to generate these predicates from information provided by sensors.

The replanning module presented here takes advantage of the rich structure of
SIPE plans and is intimately connected with the planner, which can be called
as a subroutine.  This allows the use of SIPE's capabilities to determine
efficiently how unexpected events affect the plan being executed and, in
many cases, to retain most of the original plan by making changes in it to
avoid problems caused by these unexpected events.  SIPE is also capable of
shortening the original plan when serendipitous events occur.  A general set
of replanning actions is presented along with a general replanning capability
that has been implemented by using these actions."}


@incollection{hierarchical,
author = "David E. Wilkins",
title = "Hierarchical Planning: Definition and Implementation",
booktitle = " Advances in Artificial Intelligence II",
editor = "B. Boulay and D. Hogg and L. Steels",
publisher = "North-Holland",
year = "1987",
pages = "659-671",
WINDEXKEY="sri aic paper papers",
ABSTRACT = "There is considerable ambiguity involved in hierarchical planning.  We
present a definition of the latter, and examine several of the reasons for
this confusion.  An explication of hierarchical-planning implementations 
entails two distinct notions: {\it abstraction level} and {\it planning
level}.  A problem in currently implemented planners that is caused by mixing these
two levels is presented and various remedies suggested.  Three solutions
that have been implemented in the current SIPE planning system are described."}

@article{TN410,
author = "David E. Wilkins",
title = "Causal Reasoning in Planning",
journal = CIJ,
volume = "4",
number = "4",
year = "1988",
pages = "373-380",
WINDEXKEY="sri aic paper papers",
ABSTRACT = "Reasoning about actions necessarily involves tracking the truth of assertions about the
world over time.  The SIPE planning system retains the efficiency of the STRIPS assumption
for this while enhancing expressive power by allowing the specification of a causal
theory.   Separation of knowledge about causality from knowledge about actions relieves
operators of much of their representational burden and allows them to be applicable in a
wide range of contexts.  The implementation of causal theories is described, together with
examples and evaluations of the system's expressive power and efficiency."}

@book{SIPE-BOOK,
author = "David E. Wilkins",
title = "Practical Planning: Extending the Classical {AI} Planning Paradigm",
publisher = MK,
year = "1988",
WINDEXKEY="sri aic paper papers"}


@article{SIPE-BEER,
author = "David E. Wilkins",
title = "Can {AI} Planners Solve Practical Problems?",
journal = CIJ,
pages = "232-246",
volume = "6",
number = "4",
year = "1990",
WINDEXKEY="sri aic paper papers",
ABSTRACT= "While there has been recent interest in research on planning and reasoning
about actions, nearly all research results have been theoretical.  We know of
no previous examples of a planning system that has made a significant impact on
a problem of practical importance.  One of the primary goals during the
development of the SIPE-2 planning system has been the balancing of efficiency
with expressiveness and flexibility.  With a major new extension, SIPE-2 has
begun to address practical problems.  This paper describes this new extension
and the new applications of the planner.  One of these applications is the
problem of producing products from raw materials on process lines under
production and resource constraints.  This is a problem of commercial
importance and SIPE-2's application to it is described in some
detail."}


@article{Kartam-eval,
author = "Nabil Kartam and David E. Wilkins",
title = "Toward a Foundation for Evaluating {AI} Planners",
journal = "Artificial Intelligence in Engineering Design, Analysis, and Manufacturing",
volume = "4",
number="1",
year = "1990",
WINDEXKEY="sri aic paper papers"}

@inproceedings{Kartam-hier,
author = "Nabil Kartam and Raymond Levitt and David E. Wilkins",
title = "A Centralized Approach for Representing and Resolving Interactions
 Among Multi-agent Tasks while Planning Hierarchically",
booktitle = "Proceedings of the IEEE CAIA-90 Conference",
year = "1990",
pages = "??",
WINDEXKEY="sri aic paper papers"}

@article{Kartam-ASCE,
author = "Nabil Kartam and Raymond Levitt and David E. Wilkins",
title = "Artificial Intelligence Techniques for Construction Planning",
journal = "ASCE Journal of Computing in Civil Engineering",
volume = 5,
number = 4,
pages = "464--477",
month = October,
year =  1991,
WINDEXKEY="sri aic paper papers"}



@incollection{plan-eval,
author = "John D. Lowrance and David E. Wilkins",
title = "Plan Evaluation under Uncertainity",
booktitle = "Proceedings of the Workshop on Innovative Approaches to Planning,
		Scheduling and Control",
editor = "Katia P. Sycara",
publisher = MK,
month = "November",
year = "1990",
pages = "439-449",
WINDEXKEY="sri aic paper papers",
URL="http://www.ai.sri.com/~wilkins/papers/san-diego-workshop-90.ps"}



@manual{SIPE-MANUAL,
author = "David E. Wilkins",
title = "Using the SIPE-2 Planning System: A Manual for Version 4.3",
organization = AIC,
address = SRIAD,
month = ``August'',
year = "1993",
WINDEXKEY="sri aic paper papers"}

@article{GRASPER-CL,
  author = 	"Karp, P.D. and Lowrance, J.D. and Strat, T.M. and
		 Wilkins, D.E.",
  title = 	"The {Grasper-CL} Graph Management System",
 journal = 	"{LISP} and Symbolic Computation",
 volume = 7,
 pages = "245--282",
 year = 1994,
WINDEXKEY="sri aic paper papers",
URL = "ftp://ftp.ai.sri.com/pub/papers/karp-grasper-tr.ps.Z",
ABSTRACT = "Grasper-CL is a system for manipulating
and displaying graphs, and for building graph-based user interfaces
for application programs.  It is implemented in Common Lisp and CLIM, and
has been proven by use in a number of applications.  Grasper-CL
includes several advances in graph drawing.  It contains a graph
abstract datatype plus a comprehensive and novel language of
operations on that datatype.  The appearance of Grasper-CL can
be tailored by a wide variety of shape parameters that allow the
application to customize the display of nodes and edges for different
domains.  Default values for shape parameters can be established at
several levels.  Grasper-CL a toolbox approach to graph
layout: the system contains a suite of graph layout algorithms that
can be applied individually, or in combination to produce hierarchical
graph layouts.  The system also contains an interactive graph browser."}

@techreport{UP-FINAL,
	author = "David E. Wilkins and Karen L. Myers and Leonard P. Wesley
and John D. Lowrance",
	title = "Planning in Dynamic and Uncertain Environments",
	institution = AIC,
	address = SRIAD,
	type = "Final Report",
	number = "SRI Contract 1520",
	month = "7 January",
	year = "1994",
WINDEXKEY="sri aic technical note notes"}


@incollection{Cypress-Tucson,
author = "David E. Wilkins and Karen L. Myers and Leonard P. Wesley",
title = "CYPRESS: Planning and Reacting under Uncertainity",
booktitle = "ARPA/Rome Laboratory Planning and Scheduling Initiative Workshop Proceedings",
editor = "Mark H. Burstein",
publisher = MK,
month = "February",
year = "1994",
pages = "111-120",
URL = "http://www.ai.sri.com/~cypress/report/tucson/tucson.html",
WINDEXKEY="sri aic paper papers"}


@incollection{SOCAP,
author = "David E. Wilkins and Roberto V. Desimone",
title = "Applying an {AI} Planner to Military Operations Planning",
booktitle = "Intelligent Scheduling",
editor = "M. Fox and M. Zweben",
publisher = MK,
year = "1994",
pages = "685-709",
WINDEXKEY="sri aic paper papers",
URL = "http://www.ai.sri.com/~wilkins/papers/tn534.ps",
ABSTRACT"This paper describes a prototype system for quickly developing joint military courses of action.  The
system, SOCAP (System for Operations Crisis Action Planning), combines a newly extended version of
an AI planning system, SIPE-2 (System for Interactive Planning and Execution), with a color map
display and applies this technology to military operations planning.  This paper describes the Socap
problem domain, how SIPE-2 was used to address this problem, and the strengths and weaknesses of our
approach."}

@inproceedings{Cypress-nasa,
author =  "David E. Wilkins and Karen L. Myers",
title =  "Integrating Planning and Reactive Control",
booktitle = "Third International Symposium on Artificial Intelligence, Robotics, and
Automation for Space",
address =  "Jet Propulsion Laboratory, Pasadena, CA",
year = "1994",
WINDEXKEY="sri aic paper papers",
URL="http://www.ai.sri.com/~wilkins/papers/isairas-94.ps"}

@article{Cypress-jetai,
author = "David E. Wilkins and Karen L. Myers and John D. Lowrance and Leonard P. Wesley",
title = "Planning and Reacting in Uncertain and Dynamic Environments",
journal = "Journal of Experimental and Theoretical AI",
volume = "7",
publisher = ``Taylor & Francis'',
number = "1",
pages = "197-227",
year = "1995",
WINDEXKEY="sri aic paper papers",
URL= "http://www.ai.sri.com/~wilkins/papers/jetai.ps",
ABSTRACT="Agents situated in dynamic and uncertain environments require several capabilities for
successful operation.  Such agents must monitor the world and respond appropriately to
important events.  The agents should be able to accept goals, synthesize complex plans
for achieving those goals, and execute the plans while continuing
to be responsive to changes in the world.  As events render some current
activities obsolete, the agents should be able to modify their plans while continuing
activities unaffected by those events.
The CYPRESS system is a domain-independent framework for defining
persistent agents with this full range of behavior.  CYPRESS has been used for several
demanding applications, including military operations, real-time tracking, and
fault diagnosis."}

@article{ACT,
author = "David E. Wilkins and Karen L. Myers",
title = "A Common Knowledge Representation for Plan Generation and Reactive Execution",
journal = "Journal of Logic and Computation",
year = "in press",
WINDEXKEY="sri aic paper papers",
URL="http://www.ai.sri.com/~wilkins/papers/jlc-www.ps",
ABSTRACT="The ability to integrate sophisticated planning techniques with reactive execution
systems is critical for nontrivial applications.  Merging these two 
technologies is difficult because the forms of knowledge and reasoning that they employ
differ substantially.  The ACT formalism is a language for representing the knowledge
required to support both the generation of complex plans and reactive execution of those
plans in dynamic environments.  A design goal of ACT was its adequacy for practical
applications.  ACT has been used as the interlingua in an implemented system that links a
previously implemented planner with a previously implemented executor.  This system has
been used in several applications, including robot control and military operations, thus
attesting to its expressive and computational adequacy."}
%SRI International AI Tech Note 532R
